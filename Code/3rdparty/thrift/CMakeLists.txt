#project(notecore)

include_directories(
    ..
)

ADD_LIBRARY(thrift STATIC
		#async/TAsyncBufferProcessor.h
		async/TAsyncChannel.cpp
		async/TAsyncChannel.h
		#async/TAsyncDispatchProcessor.h
		#async/TAsyncProcessor.h
		#async/TAsyncProtocolProcessor.cpp
		#async/TAsyncProtocolProcessor.h
		async/TConcurrentClientSyncInfo.cpp
		async/TConcurrentClientSyncInfo.h
		#async/TEvhttpClientChannel.cpp
		#async/TEvhttpClientChannel.h
		#async/TEvhttpServer.cpp
		#async/TEvhttpServer.h
		#concurrency/BoostMonitor.cpp
		#concurrency/BoostMutex.cpp
		#concurrency/BoostThreadFactory.cpp
		#concurrency/BoostThreadFactory.h
		#concurrency/Exception.h
		#concurrency/FunctionRunner.h
		#concurrency/Monitor.cpp
		#concurrency/Monitor.h
		#concurrency/Mutex.cpp
		#concurrency/Mutex.h
		#concurrency/PlatformThreadFactory.h
		#concurrency/PosixThreadFactory.cpp
		#concurrency/PosixThreadFactory.h
		#concurrency/StdMonitor.cpp
		#concurrency/StdMutex.cpp
		#concurrency/StdThreadFactory.cpp
		#concurrency/StdThreadFactory.h
		#concurrency/Thread.h
		concurrency/ThreadManager.cpp
		concurrency/ThreadManager.h
		concurrency/TimerManager.cpp
		concurrency/TimerManager.h
		#concurrency/Util.cpp
		#concurrency/Util.h
		processor/PeekProcessor.cpp
		processor/PeekProcessor.h
		processor/StatsProcessor.h
		processor/TMultiplexedProcessor.h
		protocol/TBase64Utils.cpp
		protocol/TBase64Utils.h
		protocol/TBinaryProtocol.h
		protocol/TCompactProtocol.h
		protocol/TDebugProtocol.cpp
		protocol/TDebugProtocol.h
		#暂时屏蔽JSON 需要更新BOOST才能编译通过
		#protocol/TJSONProtocol.cpp
		#protocol/TJSONProtocol.h
		protocol/TMultiplexedProtocol.cpp
		protocol/TMultiplexedProtocol.h
		protocol/TProtocol.cpp
		protocol/TProtocol.h
		protocol/TProtocolDecorator.h
		protocol/TProtocolException.h
		protocol/TProtocolTap.h
		protocol/TVirtualProtocol.h
		#qt/CMakeLists.txt
		#qt/TQIODeviceTransport.cpp
		#qt/TQIODeviceTransport.h
		#qt/TQTcpServer.cpp
		#qt/TQTcpServer.h
		server/TConnectedClient.cpp
		server/TConnectedClient.h
		#server/TNonblockingServer.cpp
		#server/TNonblockingServer.h
		server/TServer.cpp
		server/TServer.h
		server/TServerFramework.cpp
		server/TServerFramework.h
		server/TSimpleServer.cpp
		server/TSimpleServer.h
		server/TThreadedServer.cpp
		server/TThreadedServer.h
		server/TThreadPoolServer.cpp
		server/TThreadPoolServer.h
		transport/PlatformSocket.h
		transport/TBufferTransports.cpp
		transport/TBufferTransports.h
		transport/TFDTransport.cpp
		transport/TFDTransport.h
		transport/TFileTransport.cpp
		transport/TFileTransport.h
		transport/THttpClient.cpp
		transport/THttpClient.h
		transport/THttpServer.cpp
		transport/THttpServer.h
		transport/THttpTransport.cpp
		transport/THttpTransport.h
		transport/TPipe.cpp
		transport/TPipe.h
		transport/TPipeServer.cpp
		transport/TPipeServer.h
		transport/TServerSocket.cpp
		transport/TServerSocket.h
		transport/TServerTransport.h
		transport/TShortReadTransport.h
		transport/TSimpleFileTransport.cpp
		transport/TSimpleFileTransport.h
		transport/TSocket.cpp
		transport/TSocket.h
		transport/TSocketPool.cpp
		transport/TSocketPool.h
		#transport/TSSLServerSocket.cpp
		#transport/TSSLServerSocket.h
		#transport/TSSLSocket.cpp
		#transport/TSSLSocket.h
		transport/TTransport.h
		transport/TTransportException.cpp
		transport/TTransportException.h
		transport/TTransportUtils.cpp
		transport/TTransportUtils.h
		transport/TVirtualTransport.h
		#transport/TZlibTransport.cpp
		#transport/TZlibTransport.h
		#WIN(
			windows/config.h
			windows/GetTimeOfDay.cpp
			windows/GetTimeOfDay.h
			windows/Operators.h
			windows/OverlappedSubmissionThread.cpp
			windows/OverlappedSubmissionThread.h
			windows/SocketPair.cpp
			windows/SocketPair.h
			#windows/Sync.h
			windows/TWinsockSingleton.cpp
			windows/TWinsockSingleton.h
			windows/WinFcntl.cpp
			windows/WinFcntl.h
			#cxxfunctional.h
			#)
		TApplicationException.cpp
		TApplicationException.h
		TDispatchProcessor.h
		thrift-config.h
		Thrift.h
		TLogging.h
		TOutput.cpp
		TOutput.h
		TProcessor.h
		TToString.h
		VirtualProfiling.cpp
)